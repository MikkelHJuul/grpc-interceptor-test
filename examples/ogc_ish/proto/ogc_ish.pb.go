// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: ogc_ish.proto

package ogs_ish

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string      `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id         string      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Properties *Properties `protobuf:"bytes,3,opt,name=properties,proto3" json:"properties,omitempty"`
	Geometry   *Geometry   `protobuf:"bytes,4,opt,name=geometry,proto3" json:"geometry,omitempty"`
}

func (x *Feature) Reset() {
	*x = Feature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ogc_ish_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_ogc_ish_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_ogc_ish_proto_rawDescGZIP(), []int{0}
}

func (x *Feature) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Feature) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Feature) GetProperties() *Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Feature) GetGeometry() *Geometry {
	if x != nil {
		return x.Geometry
	}
	return nil
}

type Geometry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Coordinates *Point `protobuf:"bytes,2,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
}

func (x *Geometry) Reset() {
	*x = Geometry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ogc_ish_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Geometry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geometry) ProtoMessage() {}

func (x *Geometry) ProtoReflect() protoreflect.Message {
	mi := &file_ogc_ish_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Geometry.ProtoReflect.Descriptor instead.
func (*Geometry) Descriptor() ([]byte, []int) {
	return file_ogc_ish_proto_rawDescGZIP(), []int{1}
}

func (x *Geometry) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Geometry) GetCoordinates() *Point {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  int32 `protobuf:"varint,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude int32 `protobuf:"varint,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ogc_ish_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_ogc_ish_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_ogc_ish_proto_rawDescGZIP(), []int{2}
}

func (x *Point) GetLatitude() int32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Point) GetLongitude() int32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measurement *Measurement `protobuf:"bytes,1,opt,name=measurement,proto3" json:"measurement,omitempty"`
	Station     *Station     `protobuf:"bytes,10,opt,name=station,proto3" json:"station,omitempty"`
}

func (x *Properties) Reset() {
	*x = Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ogc_ish_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Properties) ProtoMessage() {}

func (x *Properties) ProtoReflect() protoreflect.Message {
	mi := &file_ogc_ish_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Properties.ProtoReflect.Descriptor instead.
func (*Properties) Descriptor() ([]byte, []int) {
	return file_ogc_ish_proto_rawDescGZIP(), []int{3}
}

func (x *Properties) GetMeasurement() *Measurement {
	if x != nil {
		return x.Measurement
	}
	return nil
}

func (x *Properties) GetStation() *Station {
	if x != nil {
		return x.Station
	}
	return nil
}

type Measurement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Measurement) Reset() {
	*x = Measurement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ogc_ish_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Measurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Measurement) ProtoMessage() {}

func (x *Measurement) ProtoReflect() protoreflect.Message {
	mi := &file_ogc_ish_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Measurement.ProtoReflect.Descriptor instead.
func (*Measurement) Descriptor() ([]byte, []int) {
	return file_ogc_ish_proto_rawDescGZIP(), []int{4}
}

func (x *Measurement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Measurement) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Station struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Metadata string `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Station) Reset() {
	*x = Station{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ogc_ish_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Station) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Station) ProtoMessage() {}

func (x *Station) ProtoReflect() protoreflect.Message {
	mi := &file_ogc_ish_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Station.ProtoReflect.Descriptor instead.
func (*Station) Descriptor() ([]byte, []int) {
	return file_ogc_ish_proto_rawDescGZIP(), []int{5}
}

func (x *Station) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Station) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type FeatureCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationName     string `protobuf:"bytes,1,opt,name=stationName,proto3" json:"stationName,omitempty"`
	MeasurementName string `protobuf:"bytes,2,opt,name=measurementName,proto3" json:"measurementName,omitempty"`
}

func (x *FeatureCollectionRequest) Reset() {
	*x = FeatureCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ogc_ish_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureCollectionRequest) ProtoMessage() {}

func (x *FeatureCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ogc_ish_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureCollectionRequest.ProtoReflect.Descriptor instead.
func (*FeatureCollectionRequest) Descriptor() ([]byte, []int) {
	return file_ogc_ish_proto_rawDescGZIP(), []int{6}
}

func (x *FeatureCollectionRequest) GetStationName() string {
	if x != nil {
		return x.StationName
	}
	return ""
}

func (x *FeatureCollectionRequest) GetMeasurementName() string {
	if x != nil {
		return x.MeasurementName
	}
	return ""
}

var File_ogc_ish_proto protoreflect.FileDescriptor

var file_ogc_ish_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6f, 0x67, 0x63, 0x5f, 0x69, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6f, 0x67, 0x73, 0x5f, 0x69, 0x73, 0x68, 0x22, 0x91, 0x01, 0x0a, 0x07, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f,
	0x67, 0x73, 0x5f, 0x69, 0x73, 0x68, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x0a,
	0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6f, 0x67, 0x73, 0x5f, 0x69, 0x73, 0x68, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x08,
	0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0b,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x67, 0x73, 0x5f, 0x69, 0x73, 0x68, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x22, 0x41,
	0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x22, 0x70, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x67, 0x73, 0x5f, 0x69, 0x73, 0x68, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x67, 0x73, 0x5f, 0x69,
	0x73, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x07,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x18, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x32,
	0x9a, 0x01, 0x0a, 0x0d, 0x4f, 0x47, 0x43, 0x69, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3e, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x6f, 0x67, 0x73,
	0x5f, 0x69, 0x73, 0x68, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x6f, 0x67, 0x73, 0x5f, 0x69, 0x73, 0x68, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x30,
	0x01, 0x12, 0x49, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4e, 0x6f, 0x67, 0x52, 0x50, 0x43,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x6f, 0x67, 0x73, 0x5f, 0x69, 0x73, 0x68, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6f, 0x67, 0x73, 0x5f, 0x69,
	0x73, 0x68, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ogc_ish_proto_rawDescOnce sync.Once
	file_ogc_ish_proto_rawDescData = file_ogc_ish_proto_rawDesc
)

func file_ogc_ish_proto_rawDescGZIP() []byte {
	file_ogc_ish_proto_rawDescOnce.Do(func() {
		file_ogc_ish_proto_rawDescData = protoimpl.X.CompressGZIP(file_ogc_ish_proto_rawDescData)
	})
	return file_ogc_ish_proto_rawDescData
}

var file_ogc_ish_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ogc_ish_proto_goTypes = []interface{}{
	(*Feature)(nil),                  // 0: ogs_ish.Feature
	(*Geometry)(nil),                 // 1: ogs_ish.Geometry
	(*Point)(nil),                    // 2: ogs_ish.Point
	(*Properties)(nil),               // 3: ogs_ish.Properties
	(*Measurement)(nil),              // 4: ogs_ish.Measurement
	(*Station)(nil),                  // 5: ogs_ish.Station
	(*FeatureCollectionRequest)(nil), // 6: ogs_ish.FeatureCollectionRequest
}
var file_ogc_ish_proto_depIdxs = []int32{
	3, // 0: ogs_ish.Feature.properties:type_name -> ogs_ish.Properties
	1, // 1: ogs_ish.Feature.geometry:type_name -> ogs_ish.Geometry
	2, // 2: ogs_ish.Geometry.coordinates:type_name -> ogs_ish.Point
	4, // 3: ogs_ish.Properties.measurement:type_name -> ogs_ish.Measurement
	5, // 4: ogs_ish.Properties.station:type_name -> ogs_ish.Station
	6, // 5: ogs_ish.OGCishService.Items:input_type -> ogs_ish.FeatureCollectionRequest
	6, // 6: ogs_ish.OGCishService.ItemsNogRPCConst:input_type -> ogs_ish.FeatureCollectionRequest
	0, // 7: ogs_ish.OGCishService.Items:output_type -> ogs_ish.Feature
	0, // 8: ogs_ish.OGCishService.ItemsNogRPCConst:output_type -> ogs_ish.Feature
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_ogc_ish_proto_init() }
func file_ogc_ish_proto_init() {
	if File_ogc_ish_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ogc_ish_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ogc_ish_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Geometry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ogc_ish_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ogc_ish_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ogc_ish_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Measurement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ogc_ish_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Station); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ogc_ish_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ogc_ish_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ogc_ish_proto_goTypes,
		DependencyIndexes: file_ogc_ish_proto_depIdxs,
		MessageInfos:      file_ogc_ish_proto_msgTypes,
	}.Build()
	File_ogc_ish_proto = out.File
	file_ogc_ish_proto_rawDesc = nil
	file_ogc_ish_proto_goTypes = nil
	file_ogc_ish_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OGCishServiceClient is the client API for OGCishService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OGCishServiceClient interface {
	Items(ctx context.Context, in *FeatureCollectionRequest, opts ...grpc.CallOption) (OGCishService_ItemsClient, error)
	ItemsNogRPCConst(ctx context.Context, in *FeatureCollectionRequest, opts ...grpc.CallOption) (OGCishService_ItemsNogRPCConstClient, error)
}

type oGCishServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOGCishServiceClient(cc grpc.ClientConnInterface) OGCishServiceClient {
	return &oGCishServiceClient{cc}
}

func (c *oGCishServiceClient) Items(ctx context.Context, in *FeatureCollectionRequest, opts ...grpc.CallOption) (OGCishService_ItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OGCishService_serviceDesc.Streams[0], "/ogs_ish.OGCishService/Items", opts...)
	if err != nil {
		return nil, err
	}
	x := &oGCishServiceItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OGCishService_ItemsClient interface {
	Recv() (*Feature, error)
	grpc.ClientStream
}

type oGCishServiceItemsClient struct {
	grpc.ClientStream
}

func (x *oGCishServiceItemsClient) Recv() (*Feature, error) {
	m := new(Feature)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *oGCishServiceClient) ItemsNogRPCConst(ctx context.Context, in *FeatureCollectionRequest, opts ...grpc.CallOption) (OGCishService_ItemsNogRPCConstClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OGCishService_serviceDesc.Streams[1], "/ogs_ish.OGCishService/ItemsNogRPCConst", opts...)
	if err != nil {
		return nil, err
	}
	x := &oGCishServiceItemsNogRPCConstClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OGCishService_ItemsNogRPCConstClient interface {
	Recv() (*Feature, error)
	grpc.ClientStream
}

type oGCishServiceItemsNogRPCConstClient struct {
	grpc.ClientStream
}

func (x *oGCishServiceItemsNogRPCConstClient) Recv() (*Feature, error) {
	m := new(Feature)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OGCishServiceServer is the server API for OGCishService service.
type OGCishServiceServer interface {
	Items(*FeatureCollectionRequest, OGCishService_ItemsServer) error
	ItemsNogRPCConst(*FeatureCollectionRequest, OGCishService_ItemsNogRPCConstServer) error
}

// UnimplementedOGCishServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOGCishServiceServer struct {
}

func (*UnimplementedOGCishServiceServer) Items(*FeatureCollectionRequest, OGCishService_ItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method Items not implemented")
}
func (*UnimplementedOGCishServiceServer) ItemsNogRPCConst(*FeatureCollectionRequest, OGCishService_ItemsNogRPCConstServer) error {
	return status.Errorf(codes.Unimplemented, "method ItemsNogRPCConst not implemented")
}

func RegisterOGCishServiceServer(s *grpc.Server, srv OGCishServiceServer) {
	s.RegisterService(&_OGCishService_serviceDesc, srv)
}

func _OGCishService_Items_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FeatureCollectionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OGCishServiceServer).Items(m, &oGCishServiceItemsServer{stream})
}

type OGCishService_ItemsServer interface {
	Send(*Feature) error
	grpc.ServerStream
}

type oGCishServiceItemsServer struct {
	grpc.ServerStream
}

func (x *oGCishServiceItemsServer) Send(m *Feature) error {
	return x.ServerStream.SendMsg(m)
}

func _OGCishService_ItemsNogRPCConst_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FeatureCollectionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OGCishServiceServer).ItemsNogRPCConst(m, &oGCishServiceItemsNogRPCConstServer{stream})
}

type OGCishService_ItemsNogRPCConstServer interface {
	Send(*Feature) error
	grpc.ServerStream
}

type oGCishServiceItemsNogRPCConstServer struct {
	grpc.ServerStream
}

func (x *oGCishServiceItemsNogRPCConstServer) Send(m *Feature) error {
	return x.ServerStream.SendMsg(m)
}

var _OGCishService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ogs_ish.OGCishService",
	HandlerType: (*OGCishServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Items",
			Handler:       _OGCishService_Items_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ItemsNogRPCConst",
			Handler:       _OGCishService_ItemsNogRPCConst_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ogc_ish.proto",
}
